<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Modules.Settings.Views.Controls">

    <Style x:Key="ButtonBaseStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource OnBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontStretch="{TemplateBinding FontStretch}"
                            FontStyle="{TemplateBinding FontStyle}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Content}"
                            TextOptions.TextFormattingMode="Display"
                            TextOptions.TextHintingMode="Fixed"
                            TextOptions.TextRenderingMode="ClearType" />
                        <!--<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ButtonHoverStyle"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource OnSecondaryContainer}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Surface3}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="SettingsCategoryButtonStyle"
        BasedOn="{StaticResource ButtonHoverStyle}"
        TargetType="{x:Type controls:SettingsCategoryButton}">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Medium, Source={StaticResource UIScaler}}" />
        <Setter Property="Margin" Value="3 4" />
        <Setter Property="Padding" Value="3 2" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SettingsCategoryButton}">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SecondaryContainer}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SecondaryContainer}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type controls:ShortcutKey}">
        <Setter Property="BorderThickness" Value="{Binding UIScaler.ScaleValue, Source={StaticResource UIScaler}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TagPurpleBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource TagPurpleBgBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TagPurpleBrush}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Small, Source={StaticResource UIScaler}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ShortcutKey}">
                    <Border
                        x:Name="border"
                        MinWidth="{TemplateBinding MinWidth}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <Label
                            Margin="10 2"
                            Padding="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Content="{TemplateBinding Content}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Content" Value="Alt">
                <Setter Property="BorderBrush" Value="{DynamicResource TagGreenBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagGreenBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagGreenBrush}" />
            </Trigger>
            <Trigger Property="Content" Value="Ctrl">
                <Setter Property="BorderBrush" Value="{DynamicResource TagBlueBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagBlueBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagBlueBrush}" />
            </Trigger>
            <Trigger Property="Content" Value="Shift">
                <Setter Property="BorderBrush" Value="{DynamicResource TagOrangeBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagOrangeBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagOrangeBrush}" />
            </Trigger>
            <Trigger Property="Content" Value="Space">
                <Setter Property="BorderBrush" Value="{DynamicResource TagCyanBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagCyanBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagCyanBrush}" />
            </Trigger>

            <Trigger Property="Content" Value="Mouse scroll UP">
                <Setter Property="BorderBrush" Value="{DynamicResource TagMagentaBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagMagentaBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagMagentaBrush}" />
            </Trigger>
            <Trigger Property="Content" Value="Mouse scroll DOWN">
                <Setter Property="BorderBrush" Value="{DynamicResource TagMagentaBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagMagentaBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagMagentaBrush}" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:ShortcutSeparator}">
        <Setter Property="Foreground" Value="{DynamicResource OnBackground}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Small, Source={StaticResource UIScaler}}" />
    </Style>

    <Style x:Key="SettingsItemStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="Background" Value="{DynamicResource Surface2}" />
        <Setter Property="Margin" Value="0 0 0 5" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style x:Key="BaseTextBlockClearTypeStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="Foreground" Value="{DynamicResource OnBackground}" />
    </Style>

    <Style
        x:Key="PageTitleTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockClearTypeStyle}"
        TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource UIBoldFont}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Huge, Source={StaticResource UIScaler}}" />
        <Setter Property="Foreground" Value="{DynamicResource Primary}" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style x:Key="SettingsDockPanelStyle" TargetType="{x:Type DockPanel}">
        <Setter Property="Margin" Value="0 0 0 0" />
    </Style>


    <!--  Toggle Button style  -->
    <Style x:Key="CustomToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource Outline}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid
                        x:Name="markGrid"
                        Width="45"
                        Height="26"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="Center">

                        <Border
                            x:Name="normalBorder"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="2"
                            CornerRadius="12"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Border
                            x:Name="checkedBorder"
                            Background="{DynamicResource Primary}"
                            CornerRadius="13"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />


                        <!--  Fill="{TemplateBinding BorderBrush}"  -->
                        <Ellipse
                            x:Name="normalOptionMark"
                            Width="13"
                            Height="13"
                            Margin="7 0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Fill="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            StrokeThickness="0" />

                        <Ellipse
                            x:Name="checkedOptionMark"
                            Width="20"
                            Height="20"
                            Margin="3.5 0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Fill="{DynamicResource PrimaryContainer}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            StrokeThickness="0" />

                        <!--  delete opacity=0 to turn on  -->
                        <Label
                            x:Name="onLabel"
                            Margin="4 -1 0 0"
                            Content="ON"
                            FontSize="9"
                            Foreground="{TemplateBinding BorderBrush}"
                            Opacity="0" />

                        <!--  delete opacity=0 to turn on  -->
                        <Label
                            x:Name="offLabel"
                            Margin="15 -1 0 0"
                            Content="OFF"
                            FontSize="9"
                            Foreground="{DynamicResource Outline}"
                            Opacity="0" />

                        <Grid.LayoutTransform>
                            <ScaleTransform ScaleX="{Binding UIScaler.ScaleValue, Source={StaticResource UIScaler}}" 
                                            ScaleY="{Binding UIScaler.ScaleValue, Source={StaticResource UIScaler}}" />
                        </Grid.LayoutTransform>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="normalBorder" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="normalOptionMark" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="offLabel" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="checkedBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="checkedOptionMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="onLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="normalBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="normalOptionMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="offLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="checkedBorder" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="checkedOptionMark" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="onLabel" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ToggleSideMenuStyle"
        BasedOn="{StaticResource CustomToggleStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style
        x:Key="SettingsDescriptionStyle"
        BasedOn="{StaticResource BaseTextBlockClearTypeStyle}"
        TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Small, Source={StaticResource UIScaler}}" />
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}" />
    </Style>

    <Style x:Key="BaseLabelClearTypeStyle" TargetType="Label">
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="Foreground" Value="{DynamicResource OnBackground}" />
    </Style>

</ResourceDictionary>