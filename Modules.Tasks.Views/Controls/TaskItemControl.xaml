<UserControl
    x:Class="Modules.Tasks.Views.Controls.TaskItemControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:controls="clr-namespace:Modules.Common.Views.Controls;assembly=Modules.Common.Views"
    xmlns:controls1="clr-namespace:Modules.Tasks.TextEditor.Controls;assembly=Modules.Tasks.TextEditor"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:local="clr-namespace:Modules.Tasks.Views.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueConverters="clr-namespace:Modules.Tasks.Views.ValueConverters"
    xmlns:valueConverters1="clr-namespace:Modules.Common.Views.ValueConverters;assembly=Modules.Common.Views"
    d:DataContext="{d:DesignInstance local:TaskItemViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    dd:DragDrop.IsDragSource="{Binding Content.IsEditMode}"
    ContextMenu="{StaticResource TaskListItemContextMenu}"
    mc:Ignorable="d">

    <Grid Margin="{Binding IsFirstItem, Converter={StaticResource TaskItemBoolToMarginConverter}}">
        <Grid
            Margin="{Binding AppSettings.TaskPageSettings.TaskListMargin, Source={StaticResource AppSettings}, Converter={StaticResource TaskListItemMarginConverter}}"
            Background="Transparent">

            <!--  COLOR BAR  -->
            <!--  CornerRadius="{Binding Path=AppSettings.IsColorBarRounded, Source={StaticResource AppSettings}, Converter={StaticResource boolToCornerRadiusConverter}}">  -->
            <Border
                Name="ColorBarBorder"
                Margin="4 2"
                HorizontalAlignment="Left"
                Panel.ZIndex="1000"
                Background="{Binding MarkerColor, Converter={StaticResource StringRgbToBrushConverter}}"
                CornerRadius="3 0 0 3">
                <Border.Width>
                    <MultiBinding>
                        <MultiBinding.Converter>
                            <valueConverters:ColorBarWidthMultiValueConverter />
                        </MultiBinding.Converter>
                        <Binding
                            Path="AppSettings.TaskSettings.ColorBarThickness"
                            Source="{StaticResource AppSettings}" />
                        <Binding
                            Path="UIScaler.ScaleValue"
                            Source="{StaticResource UIScaler}" />
                    </MultiBinding>
                </Border.Width>
            </Border>

            <!--  ITEM BORDER DEFAULT OUTLINE  -->
            <Border
                Margin="4 2"
                BorderBrush="{DynamicResource OutlineVariant}"
                BorderThickness="1"
                CornerRadius="3"
                Visibility="{Binding AppSettings.TaskSettings.BorderVisible, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />

            <!--  ITEM BORDER WITH CUSTOM COLOR  -->
            <Border
                Margin="4 2"
                BorderBrush="{Binding BorderColor, Converter={StaticResource StringRgbToBrushConverter}}"
                BorderThickness="1"
                CornerRadius="3" />

            <!--  EDITOR INDICATOR BORDER  -->
            <Border
                Margin="2 0"
                BorderBrush="{DynamicResource Tertiary}"
                BorderThickness="1.5"
                CornerRadius="3"
                Visibility="{Binding Content.IsEditMode, Converter={StaticResource BoolToVisibilityConverter}}" />

            <!--  ITEM CONTENT  -->
            <Border
                x:Name="TaskListItemBackground"
                Margin="4 2"
                BorderBrush="Transparent"
                BorderThickness="1"
                CornerRadius="3">
                <Border.Background>
                    <MultiBinding
                        Converter="{valueConverters:TaskItemBackgroundBrushMultiValueConverter}"
                        UpdateSourceTrigger="PropertyChanged">
                        <Binding Path="IsDone" />
                        <Binding
                            Path="AppSettings.TaskSettings.BackgroundVisible"
                            Source="{StaticResource AppSettings}" />
                    </MultiBinding>
                </Border.Background>

                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseEnter">
                        <b:InvokeCommandAction Command="{Binding EnableQuickActionsCommand}" />
                    </b:EventTrigger>

                    <b:EventTrigger EventName="MouseLeave">
                        <b:InvokeCommandAction Command="{Binding DisableQuickActionsCommand}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>

                <Border.Triggers>
                    <EventTrigger RoutedEvent="Border.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="HoverButtonBorder"
                                    Storyboard.TargetProperty="(Opacity)"
                                    From="0"
                                    To="1"
                                    Duration="0:0:0.1" />
                                <DoubleAnimation
                                    Storyboard.TargetName="MouseOverBackground"
                                    Storyboard.TargetProperty="(Opacity)"
                                    From="0"
                                    To="1"
                                    Duration="0:0:0.1" />

                                <BooleanAnimationUsingKeyFrames
                                    FillBehavior="HoldEnd"
                                    Storyboard.TargetName="HoverButtonBorder"
                                    Storyboard.TargetProperty="IsHitTestVisible"
                                    Duration="0:0:0.1">
                                    <DiscreteBooleanKeyFrame
                                        KeyTime="0:0:0"
                                        Value="False" />
                                    <DiscreteBooleanKeyFrame
                                        KeyTime="0:0:0"
                                        Value="True" />
                                </BooleanAnimationUsingKeyFrames>

                            </Storyboard>
                        </BeginStoryboard>

                    </EventTrigger>

                    <EventTrigger RoutedEvent="Border.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="HoverButtonBorder"
                                    Storyboard.TargetProperty="(Opacity)"
                                    From="1"
                                    To="0"
                                    Duration="0:0:0.1" />
                                <DoubleAnimation
                                    Storyboard.TargetName="MouseOverBackground"
                                    Storyboard.TargetProperty="(Opacity)"
                                    From="1"
                                    To="0"
                                    Duration="0:0:0.1" />

                                <BooleanAnimationUsingKeyFrames
                                    FillBehavior="HoldEnd"
                                    Storyboard.TargetName="HoverButtonBorder"
                                    Storyboard.TargetProperty="IsHitTestVisible"
                                    Duration="0:0:0.1">
                                    <DiscreteBooleanKeyFrame
                                        KeyTime="0:0:0"
                                        Value="True" />
                                    <DiscreteBooleanKeyFrame
                                        KeyTime="0:0:0"
                                        Value="False" />
                                </BooleanAnimationUsingKeyFrames>

                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <!--  Color bar column  -->
                            <ColumnDefinition>
                                <ColumnDefinition.Width>
                                    <MultiBinding>
                                        <MultiBinding.Converter>
                                            <valueConverters:ColorBarGridWidthMultiValueConverter />
                                        </MultiBinding.Converter>
                                        <Binding
                                            Path="AppSettings.TaskSettings.ColorBarThickness"
                                            Source="{StaticResource AppSettings}" />
                                        <Binding
                                            Path="UIScaler.ScaleValue"
                                            Source="{StaticResource UIScaler}" />
                                    </MultiBinding>
                                </ColumnDefinition.Width>
                            </ColumnDefinition>

                            <!--  Checkbox column  -->
                            <ColumnDefinition Width="auto" />
                            <!--  Main content column, also the hidden buttons column  -->
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!--  ITEM BACKGROUND  -->
                        <Border
                            Grid.Column="0"
                            Grid.ColumnSpan="3"
                            Background="{Binding BackgroundColor, Converter={StaticResource StringRgbToBrushConverter}}"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            CornerRadius="3"
                            Opacity="0.3" />

                        <!--  MOUSE OVER BACKGROUND  -->
                        <Grid
                            x:Name="MouseOverBackground"
                            Grid.Column="0"
                            Grid.ColumnSpan="3"
                            Opacity="0">
                            <Border
                                Background="{DynamicResource OnBackground}"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                CornerRadius="3"
                                IsEnabled="False"
                                IsHitTestVisible="False"
                                Opacity="0.06" />
                        </Grid>

                        <!--  Task Checkbox  -->
                        <Grid Grid.Column="1">

                            <!--  CIRCULAR CHECKBOX  -->
                            <Border Visibility="{Binding AppSettings.TaskSettings.CircularCheckbox, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}">
                                <CheckBox
                                    Margin="{Binding UIScaler.TaskCheckBoxWidth, Source={StaticResource UIScaler}, Converter={StaticResource TaskCheckboxMarginConverter}}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Command="{Binding Cmd.IsDoneModifiedCommand}"
                                    IsChecked="{Binding IsDone}"
                                    IsEnabled="{Binding Content.IsDisplayMode}"
                                    Opacity="{Binding Opacity}"
                                    Style="{StaticResource TaskCheckBoxStyle}"
                                    Visibility="{Binding AppSettings.TaskQuickActionSettings.CheckboxEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />
                            </Border>

                            <!--  SQUARE CHECKBOX  -->
                            <Border Visibility="{Binding AppSettings.TaskSettings.CircularCheckbox, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityNegatedConverter}}">
                                <CheckBox
                                    Margin="{Binding UIScaler.TaskCheckBoxWidth, Source={StaticResource UIScaler}, Converter={StaticResource TaskCheckboxMarginConverter}}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Command="{Binding Cmd.IsDoneModifiedCommand}"
                                    IsChecked="{Binding IsDone}"
                                    IsEnabled="{Binding Content.IsDisplayMode}"
                                    Opacity="{Binding Opacity}"
                                    Style="{StaticResource TaskCheckBoxSquareStyle}"
                                    Visibility="{Binding AppSettings.TaskQuickActionSettings.CheckboxEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />
                            </Border>
                        </Grid>


                        <!--  Clock and Pin icon  -->
                        <Border
                            Grid.Column="2"
                            Margin="0"
                            HorizontalAlignment="Right"
                            Background="Transparent">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <!--  CLOCK ICON  -->
                                <Border
                                    Grid.Column="0"
                                    Margin="0"
                                    HorizontalAlignment="Right"
                                    Background="Transparent">
                                    <Border.Visibility>
                                        <MultiBinding Converter="{StaticResource BoolToVisibilityAndConverter}">
                                            <Binding Path="IsAnyReminderOn" />
                                            <Binding Path="Content.IsDisplayMode" />
                                        </MultiBinding>
                                    </Border.Visibility>

                                    <Grid>
                                        <Label
                                            Padding="2"
                                            Content="{StaticResource IconClock}"
                                            FontFamily="{StaticResource IconFont}"
                                            Foreground="{DynamicResource Tertiary}" />
                                        <Grid.LayoutTransform>
                                            <!--  -1 to mirror it  -->
                                            <ScaleTransform ScaleX="{Binding Source={StaticResource UIScaler}, Path=UIScaler.ScaleValue}" ScaleY="{Binding Source={StaticResource UIScaler}, Path=UIScaler.ScaleValue}" />
                                        </Grid.LayoutTransform>
                                    </Grid>
                                </Border>

                                <!--  PIN ICON  -->
                                <Border
                                    Grid.Column="1"
                                    Margin="0"
                                    HorizontalAlignment="Right"
                                    Background="Transparent">
                                    <Border.Visibility>
                                        <MultiBinding Converter="{StaticResource BoolToVisibilityAndConverter}">
                                            <Binding Path="Pinned" />
                                            <Binding Path="Content.IsDisplayMode" />
                                        </MultiBinding>
                                    </Border.Visibility>

                                    <Grid>
                                        <Label
                                            Padding="2"
                                            Content="{StaticResource IconPinFilled}"
                                            FontFamily="{StaticResource IconFont}"
                                            Foreground="{DynamicResource Tertiary}" />
                                        <Label
                                            Padding="2"
                                            Content="{StaticResource IconPin}"
                                            FontFamily="{StaticResource IconFont}"
                                            Foreground="{DynamicResource Tertiary}" />
                                        <Grid.LayoutTransform>
                                            <!--  -1 to mirror it  -->
                                            <ScaleTransform ScaleX="{Binding Source={StaticResource UIScaler}, Path=UIScaler.ScaleValue}" ScaleY="{Binding Source={StaticResource UIScaler}, Path=UIScaler.ScaleValue}" />
                                        </Grid.LayoutTransform>
                                    </Grid>
                                </Border>

                            </Grid>
                        </Border>

                        <!--  Main content  -->
                        <Border
                            Grid.Column="2"
                            Margin="{Binding AppSettings.TaskSettings.Spacing, Source={StaticResource AppSettings}, Converter={StaticResource TaskSpacingToMarginConverter}}">
                            <Grid Margin="0 2 10 2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <!--  Task tag  -->
                                <ListView
                                    Grid.Column="0"
                                    HorizontalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    ItemsSource="{Binding Tags}"
                                    Opacity="{Binding Content.TextOpacity}"
                                    ScrollViewer.CanContentScroll="False"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                    Template="{DynamicResource NonScrollableListBoxControlTemplate}">

                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListViewItem">
                                                        <ContentPresenter />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListView.ItemContainerStyle>

                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <controls:TagControl
                                                Content="{Binding Name}"
                                                TagColor="{Binding Color}" />
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>

                                <Grid Grid.Column="1">

                                    <!--  TASK CONTENT  -->
                                    <controls1:DynamicTextBox
                                        DataContext="{Binding Content}"
                                        IsPlainTextMode="{Binding IsPlainTextMode}" />
                                </Grid>


                                <!--  Catch double click to change to edit mode  -->
                                <Border
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="0 -2 -10 -2"
                                    Background="Transparent"
                                    Visibility="{Binding Content.IsEditMode, Converter={StaticResource BoolToVisibilityNegatedConverter}}">

                                    <Border.InputBindings>
                                        <MouseBinding
                                            Command="{Binding Cmd.EditItemCommand}"
                                            Gesture="LeftDoubleClick" />
                                        <MouseBinding
                                            Command="{Binding Cmd.ToggleIsDoneCommand}"
                                            Gesture="MiddleDoubleClick" />
                                    </Border.InputBindings>
                                </Border>

                            </Grid>

                        </Border>

                        <!--  TASK POPUP PANEL  -->
                        <local:TaskPopupControl
                            x:Name="HoverButtonBorder"
                            Grid.Column="2"
                            Opacity="0" />

                    </Grid>

                    <!--  INFO  -->
                    <Grid
                        Grid.Row="1"
                        Background="{DynamicResource Surface2}"
                        IsEnabled="{Binding DetailsVisible}"
                        Visibility="{Binding DetailsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <!--  Placeholder border to shift the info panel as much as the ColorBar's width  -->
                        <Border Width="{Binding Width, ElementName=ColorBarBorder}" />

                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                Height="1"
                                Background="{DynamicResource OutlineVariant}" />


                            <!--  LEFT COLUMN  -->

                            <!--  CREATED  -->
                            <Label
                                Grid.Row="1"
                                Grid.Column="0"
                                Content="Created:"
                                Style="{StaticResource TaskPropertyLabelLeftStyle}" />

                            <!--  MODIFIED  -->
                            <Label
                                Grid.Row="2"
                                Grid.Column="0"
                                Content="Modified:"
                                Style="{StaticResource TaskPropertyLabelLeftStyle}" />

                            <!--  EDITED  -->
                            <Label
                                Grid.Row="3"
                                Grid.Column="0"
                                Content="Edited:"
                                Style="{StaticResource TaskPropertyLabelLeftStyle}" />

                            <!--  RIGHT COLUMN  -->

                            <!--  CREATION DATE  -->
                            <Label
                                Grid.Row="1"
                                Grid.Column="1"
                                Style="{StaticResource TaskPropertyLabelRightStyle}">
                                <Label.Content>
                                    <MultiBinding>
                                        <MultiBinding.Converter>
                                            <valueConverters1:CurrentDateTimeFormatMultiConverter />
                                        </MultiBinding.Converter>
                                        <Binding Path="CreationDate" />
                                        <Binding
                                            Path="AppSettings.DateTimeSettings.TaskCreationDateFormat"
                                            Source="{StaticResource AppSettings}" />
                                    </MultiBinding>
                                </Label.Content>
                            </Label>

                            <!--  MODIFICATION DATE  -->
                            <Label
                                Grid.Row="2"
                                Grid.Column="1"
                                Style="{StaticResource TaskPropertyLabelRightStyle}">
                                <Label.Content>
                                    <MultiBinding>
                                        <MultiBinding.Converter>
                                            <valueConverters1:CurrentDateTimeFormatMultiConverter />
                                        </MultiBinding.Converter>
                                        <Binding Path="ModificationDate" />
                                        <Binding
                                            Path="AppSettings.DateTimeSettings.TaskCreationDateFormat"
                                            Source="{StaticResource AppSettings}" />
                                    </MultiBinding>
                                </Label.Content>
                            </Label>

                            <!--  EDITED X TIMES  -->
                            <StackPanel
                                Grid.Row="3"
                                Grid.Column="1"
                                Orientation="Horizontal">

                                <Label
                                    Margin="8 0 0 0"
                                    Padding="5 5 0 0"
                                    Content="{Binding VersionCount}"
                                    Style="{StaticResource TaskPropertyLabelRightStyle}" />
                                <Label
                                    Margin="0"
                                    Content=" times"
                                    Style="{StaticResource TaskPropertyLabelRightStyle}" />

                                <Button
                                    Command="{Binding Cmd.ShowHistoryCommand}"
                                    Content="Open history"
                                    IsEnabled="{Binding HasHistory}"
                                    Style="{StaticResource HistoryButtonStyle}"
                                    Visibility="{Binding HasHistory, Converter={StaticResource BoolToVisibilityConverter}}" />

                            </StackPanel>

                        </Grid>
                    </Grid>

                </Grid>

            </Border>

        </Grid>

    </Grid>
</UserControl>
