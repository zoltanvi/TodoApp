<UserControl
    x:Class="Modules.Tasks.Views.Controls.TaskItemControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:controls="clr-namespace:Modules.Common.Views.Controls;assembly=Modules.Common.Views"
    xmlns:controls1="clr-namespace:Modules.Tasks.TextEditor.Controls;assembly=Modules.Tasks.TextEditor"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:local="clr-namespace:Modules.Tasks.Views.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueConverters="clr-namespace:Modules.Tasks.Views.ValueConverters"
    xmlns:valueConverters1="clr-namespace:Modules.Common.Views.ValueConverters;assembly=Modules.Common.Views"
    d:DataContext="{d:DesignInstance local:TaskItemViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    dd:DragDrop.IsDragSource="{Binding TextEditorViewModel.IsEditMode}"
    mc:Ignorable="d">

    <Grid
        Margin="{Binding AppSettings.TaskPageSettings.TaskListMargin, Source={StaticResource AppSettings}, Converter={StaticResource TaskListItemMarginConverter}}"
        Background="Transparent">

        <!--  COLOR BAR  -->
        <!--  CornerRadius="{Binding Path=AppSettings.IsColorBarRounded, Source={StaticResource AppSettings}, Converter={StaticResource boolToCornerRadiusConverter}}">  -->
        <Border
            Name="ColorBarBorder"
            Margin="4 2"
            HorizontalAlignment="Left"
            Panel.ZIndex="1000"
            Background="{Binding MarkerColor, Converter={StaticResource StringRgbToBrushConverter}}"
            CornerRadius="3 0 0 3">
            <Border.Width>
                <MultiBinding>
                    <MultiBinding.Converter>
                        <valueConverters:ColorBarWidthMultiValueConverter />
                    </MultiBinding.Converter>
                    <Binding
                        Path="AppSettings.TaskSettings.ColorBarThickness"
                        Source="{StaticResource AppSettings}" />
                    <Binding
                        Path="UIScaler.ScaleValue"
                        Source="{StaticResource UIScaler}" />
                </MultiBinding>
            </Border.Width>
        </Border>

        <!--  ITEM BORDER  -->
        <Border
            Margin="4 2"
            BorderBrush="{Binding BorderColor, Converter={StaticResource TaskBorderBrushConverter}}"
            BorderThickness="1"
            CornerRadius="3"
            Visibility="{Binding AppSettings.TaskSettings.BorderVisible, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />

        <!--  Editor indicator  -->
        <Border
            Margin="2 0"
            BorderBrush="{DynamicResource Tertiary}"
            BorderThickness="1.5"
            CornerRadius="3"
            Visibility="{Binding TextEditorViewModel.IsEditMode, Converter={StaticResource BoolToVisibilityConverter}}" />


        <!--  ITEM CONTENT  -->
        <Border
            x:Name="TaskListItemBackground"
            Margin="4 2"
            BorderBrush="Transparent"
            BorderThickness="1"
            CornerRadius="3">
            <Border.Background>
                <MultiBinding
                    Converter="{valueConverters:TaskItemBackgroundBrushMultiValueConverter}"
                    UpdateSourceTrigger="PropertyChanged">
                    <Binding Path="IsDone" />
                    <Binding
                        Path="AppSettings.TaskSettings.BackgroundVisible"
                        Source="{StaticResource AppSettings}" />
                </MultiBinding>
            </Border.Background>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <!--  Color bar column  -->
                        <ColumnDefinition>
                            <ColumnDefinition.Width>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <valueConverters:ColorBarGridWidthMultiValueConverter />
                                    </MultiBinding.Converter>
                                    <Binding
                                        Path="AppSettings.TaskSettings.ColorBarThickness"
                                        Source="{StaticResource AppSettings}" />
                                    <Binding
                                        Path="UIScaler.ScaleValue"
                                        Source="{StaticResource UIScaler}" />
                                </MultiBinding>
                            </ColumnDefinition.Width>
                        </ColumnDefinition>

                        <!--  Checkbox column  -->
                        <ColumnDefinition Width="auto" />
                        <!--  Main content column, also the hidden buttons column  -->
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--  ITEM BACKGROUND  -->
                    <Border
                        Grid.ColumnSpan="3"
                        Background="{Binding BackgroundColor, Converter={StaticResource StringRgbToBrushConverter}}"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        CornerRadius="3"
                        Opacity="0.3" />

                    <!--  Task Checkbox  -->
                    <Grid Grid.Column="1">
                        <Border Visibility="{Binding AppSettings.TaskSettings.CircularCheckbox, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}">
                            <CheckBox
                                Margin="{Binding UIScaler.TaskCheckBoxWidth, Source={StaticResource UIScaler}, Converter={StaticResource TaskCheckboxMarginConverter}}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding IsDoneModifiedCommand}"
                                IsChecked="{Binding IsDone}"
                                IsEnabled="{Binding TextEditorViewModel.IsDisplayMode}"
                                Style="{StaticResource TaskCheckBoxStyle}"
                                Visibility="{Binding AppSettings.TaskQuickActionSettings.CheckboxEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Border>

                        <Border Visibility="{Binding AppSettings.TaskSettings.CircularCheckbox, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityNegatedConverter}}">
                            <CheckBox
                                Margin="{Binding UIScaler.TaskCheckBoxWidth, Source={StaticResource UIScaler}, Converter={StaticResource TaskCheckboxMarginConverter}}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding IsDoneModifiedCommand}"
                                IsChecked="{Binding IsDone}"
                                IsEnabled="{Binding TextEditorViewModel.IsDisplayMode}"
                                Style="{StaticResource TaskCheckBoxSquareStyle}"
                                Visibility="{Binding AppSettings.TaskQuickActionSettings.CheckboxEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Border>
                    </Grid>


                    <!--  Clock and Pin icon  -->
                    <Border
                        Grid.Column="2"
                        Margin="0"
                        HorizontalAlignment="Right"
                        Background="Transparent">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <!--  CLOCK ICON  -->
                            <Border
                                Grid.Column="0"
                                Margin="0"
                                HorizontalAlignment="Right"
                                Background="Transparent">
                                <Border.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolToVisibilityAndConverter}">
                                        <Binding Path="IsAnyReminderOn" />
                                        <Binding Path="TextEditorViewModel.IsDisplayMode" />
                                    </MultiBinding>
                                </Border.Visibility>

                                <Grid>
                                    <Label
                                        Padding="2"
                                        Content="{StaticResource IconClock}"
                                        FontFamily="{StaticResource IconFont}"
                                        Foreground="{DynamicResource Tertiary}" />
                                    <Grid.LayoutTransform>
                                        <!--  -1 to mirror it  -->
                                        <ScaleTransform ScaleX="{Binding Source={StaticResource UIScaler}, Path=UIScaler.ScaleValue}" ScaleY="{Binding Source={StaticResource UIScaler}, Path=UIScaler.ScaleValue}" />
                                    </Grid.LayoutTransform>
                                </Grid>
                            </Border>

                            <!--  PIN ICON  -->
                            <Border
                                Grid.Column="1"
                                Margin="0"
                                HorizontalAlignment="Right"
                                Background="Transparent">
                                <Border.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolToVisibilityAndConverter}">
                                        <Binding Path="Pinned" />
                                        <Binding Path="TextEditorViewModel.IsDisplayMode" />
                                    </MultiBinding>
                                </Border.Visibility>

                                <Grid>
                                    <Label
                                        Padding="2"
                                        Content="{StaticResource IconPinFilled}"
                                        FontFamily="{StaticResource IconFont}"
                                        Foreground="{DynamicResource Tertiary}" />
                                    <Label
                                        Padding="2"
                                        Content="{StaticResource IconPin}"
                                        FontFamily="{StaticResource IconFont}"
                                        Foreground="{DynamicResource Tertiary}" />
                                    <Grid.LayoutTransform>
                                        <!--  -1 to mirror it  -->
                                        <ScaleTransform ScaleX="{Binding Source={StaticResource UIScaler}, Path=UIScaler.ScaleValue}" ScaleY="{Binding Source={StaticResource UIScaler}, Path=UIScaler.ScaleValue}" />
                                    </Grid.LayoutTransform>
                                </Grid>
                            </Border>

                        </Grid>
                    </Border>

                    <!--  Main content  -->
                    <Border
                        Grid.Column="2"
                        Margin="{Binding AppSettings.TaskSettings.Spacing, Source={StaticResource AppSettings}, Converter={StaticResource TaskSpacingToMarginConverter}}">
                        <Grid Margin="0 2 10 2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--  Task tag  -->
                            <ListView
                                Grid.Column="0"
                                HorizontalContentAlignment="Stretch"
                                Background="Transparent"
                                BorderThickness="0"
                                ItemsSource="{Binding Tags}"
                                ScrollViewer.CanContentScroll="False"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                Opacity="{Binding TextEditorViewModel.TextOpacity}"
                                Template="{DynamicResource NonScrollableListBoxControlTemplate}">

                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListViewItem">
                                                    <ContentPresenter />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <controls:TagControl
                                            Content="{Binding Name}"
                                            TagColor="{Binding Color}" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                            <!--  Task description  -->
                            <controls1:RichTextEditorControl
                                Grid.Column="1"
                                DataContext="{Binding TextEditorViewModel}"
                                IsReadOnly="False" />

                            <!--  Catch double click to change to edit mode  -->
                            <Border
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="Transparent"
                                Visibility="{Binding TextEditorViewModel.IsEditMode, Converter={StaticResource BoolToVisibilityNegatedConverter}}">
                                <Border.InputBindings>
                                    <MouseBinding
                                        Command="{Binding EditItemCommand}"
                                        Gesture="LeftDoubleClick" />
                                    <MouseBinding
                                        Command="{Binding ToggleIsDoneCommand}"
                                        Gesture="MiddleDoubleClick" />
                                </Border.InputBindings>
                            </Border>

                        </Grid>

                    </Border>


                    <!--  Hidden buttons  -->
                    <Border
                        x:Name="HoverButtonBorder"
                        Grid.Column="2"
                        Padding="0"
                        HorizontalAlignment="Right"
                        Background="Transparent"
                        IsEnabled="{Binding AppSettings.TaskQuickActionSettings.Enabled, Source={StaticResource AppSettings}}"
                        Opacity="0">
                        <Border.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityAndConverter}">
                                <Binding
                                    Path="AppSettings.TaskQuickActionSettings.AnyEnabled"
                                    Source="{StaticResource AppSettings}" />
                                <Binding Path="TextEditorViewModel.IsDisplayMode" />
                            </MultiBinding>
                        </Border.Visibility>

                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Border.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HoverButtonBorder"
                                            Storyboard.TargetProperty="(Opacity)"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.10" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="Border.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HoverButtonBorder"
                                            Storyboard.TargetProperty="(Opacity)"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>

                        <!--  ENABLE OR DISABLE QUICK ACTIONS  -->
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="MouseEnter">
                                <b:InvokeCommandAction Command="{Binding EnableQuickActionsCommand}" />
                            </b:EventTrigger>

                            <b:EventTrigger EventName="MouseLeave">
                                <b:InvokeCommandAction Command="{Binding DisableQuickActionsCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>

                        <!--  HOVER PANEL  -->
                        <Border
                            Padding="10 0"
                            HorizontalAlignment="Right"
                            Background="{DynamicResource Surface1}"
                            BorderBrush="{DynamicResource SurfaceVariant}"
                            BorderThickness="1 0 0 0"
                            CornerRadius="0 2 2 0">

                            <StackPanel Orientation="Horizontal">
                                <!--  Calendar empty button  -->
                                <Grid Visibility="{Binding IsAnyReminderOn, Converter={StaticResource BoolToVisibilityNegatedConverter}}">
                                    <Button
                                        Command="{Binding OpenReminderCommand}"
                                        Content="{StaticResource IconCalendar}"
                                        IsEnabled="{Binding IsQuickActionsEnabled}"
                                        Style="{StaticResource ButtonQuickActionStyle}"
                                        ToolTip="Set Reminder"
                                        Visibility="{Binding AppSettings.TaskQuickActionSettings.ReminderEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />
                                </Grid>

                                <!--  Calendar active button  -->
                                <Grid Visibility="{Binding IsAnyReminderOn, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Button
                                        Command="{Binding OpenReminderCommand}"
                                        Content="{StaticResource IconDateTime}"
                                        IsEnabled="{Binding IsQuickActionsEnabled}"
                                        Style="{StaticResource ButtonQuickActionStyle}"
                                        Visibility="{Binding AppSettings.TaskQuickActionSettings.ReminderEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <Button.ToolTip>
                                            <MultiBinding>
                                                <MultiBinding.Converter>
                                                    <valueConverters1:CurrentDateTimeFormatMultiConverter />
                                                </MultiBinding.Converter>
                                                <Binding Path="NextReminderDate" />
                                                <Binding
                                                    Path="AppSettings.DateTimeSettings.ReminderDateFormat"
                                                    Source="{StaticResource AppSettings}" />
                                            </MultiBinding>
                                        </Button.ToolTip>
                                    </Button>
                                </Grid>

                                <!--  Marker color  -->
                                <controls:SingletonColorPicker
                                    Width="{Binding UIScaler.ColorPickerWidth, Source={StaticResource UIScaler}}"
                                    Height="{Binding UIScaler.ColorPickerHeight, Source={StaticResource UIScaler}}"
                                    Margin="4 0 0 0"
                                    ColorChangedNotification="{Binding ColorChangedNotification, Mode=OneWay}"
                                    IsEnabled="{Binding IsQuickActionsEnabled}"
                                    SelectedColorString="{Binding MarkerColor, Mode=TwoWay}"
                                    ToolTip="Marker color"
                                    Visibility="{Binding AppSettings.TaskQuickActionSettings.ColorEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />

                                <!--  Background color picker  -->
                                <controls:SingletonColorPicker
                                    Width="{Binding UIScaler.ColorPickerWidth, Source={StaticResource UIScaler}}"
                                    Height="{Binding UIScaler.ColorPickerHeight, Source={StaticResource UIScaler}}"
                                    Margin="4 0 0 0"
                                    ColorChangedNotification="{Binding ColorChangedNotification, Mode=OneWay}"
                                    IsEnabled="{Binding IsQuickActionsEnabled}"
                                    SelectedColorString="{Binding BackgroundColor, Mode=TwoWay}"
                                    ToolTip="Background color"
                                    Visibility="{Binding AppSettings.TaskQuickActionSettings.BackgroundColorEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />

                                <!--  BorderColor picker  -->
                                <controls:SingletonColorPicker
                                    Width="{Binding UIScaler.ColorPickerWidth, Source={StaticResource UIScaler}}"
                                    Height="{Binding UIScaler.ColorPickerHeight, Source={StaticResource UIScaler}}"
                                    Margin="4 0 0 0"
                                    ColorChangedNotification="{Binding ColorChangedNotification, Mode=OneWay}"
                                    IsEnabled="{Binding IsQuickActionsEnabled}"
                                    SelectedColorString="{Binding BorderColor, Mode=TwoWay}"
                                    ToolTip="Border color"
                                    Visibility="{Binding AppSettings.TaskQuickActionSettings.BorderColorEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />

                                <Grid Visibility="{Binding AppSettings.TaskQuickActionSettings.TagEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Button
                                        Margin="4 0 0 0"
                                        Command="{Binding ShowTagSelectorCommand}"
                                        Content="{StaticResource IconTag}"
                                        Style="{StaticResource ButtonQuickActionStyle}"
                                        ToolTip="Select tag" />
                                </Grid>

                                <!--  Pin button  -->
                                <Grid Visibility="{Binding Pinned, Converter={StaticResource BoolToVisibilityNegatedConverter}}">
                                    <Button
                                        Margin="4 0 0 0"
                                        Command="{Binding PinItemCommand}"
                                        Content="{StaticResource IconPin}"
                                        Style="{StaticResource ButtonQuickActionStyle}"
                                        ToolTip="Pin task"
                                        Visibility="{Binding AppSettings.TaskQuickActionSettings.PinEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />
                                </Grid>
                                <!--  Unpin button  -->
                                <Grid Visibility="{Binding Pinned, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Button
                                        Margin="4 0 0 0"
                                        Command="{Binding UnpinItemCommand}"
                                        Content="{StaticResource IconUnpin}"
                                        Style="{StaticResource ButtonQuickActionStyle}"
                                        ToolTip="Unpin task"
                                        Visibility="{Binding AppSettings.TaskQuickActionSettings.PinEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />
                                </Grid>

                                <!--  Show details  -->
                                <Grid Visibility="{Binding AppSettings.TaskQuickActionSettings.DetailsEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Button
                                        Margin="4 0 0 0"
                                        Command="{Binding ToggleDetailsCommand}"
                                        Content="{StaticResource IconInfo}"
                                        Style="{StaticResource ButtonQuickActionStyle}"
                                        ToolTip="Show details"
                                        Visibility="{Binding DetailsVisible, Converter={StaticResource BoolToVisibilityNegatedConverter}}" />
                                </Grid>

                                <!--  Hide details  -->
                                <Grid Visibility="{Binding AppSettings.TaskQuickActionSettings.DetailsEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Button
                                        Margin="4 0 0 0"
                                        Command="{Binding ToggleDetailsCommand}"
                                        Content="{StaticResource IconHideInfo}"
                                        Style="{StaticResource ButtonQuickActionStyle}"
                                        ToolTip="Hide details"
                                        Visibility="{Binding DetailsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
                                </Grid>

                                <!--  Trash button  -->
                                <Button
                                    Margin="4 0 0 0"
                                    Command="{Binding DeleteItemCommand}"
                                    Content="{StaticResource IconTrash}"
                                    Cursor="Hand"
                                    Style="{StaticResource ButtonQuickActionRedStyle}"
                                    ToolTip="Trash task"
                                    Visibility="{Binding AppSettings.TaskQuickActionSettings.TrashEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />

                            </StackPanel>

                        </Border>
                    </Border>
                </Grid>

                <!--  INFO  -->
                <Grid
                    Grid.Row="1"
                    Background="{DynamicResource Surface2}"
                    Visibility="{Binding DetailsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <!--  Placeholder border to shift the info panel as much as the ColorBar's width  -->
                    <Border Width="{Binding Width, ElementName=ColorBarBorder}" />

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Border
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Height="1"
                            Background="{DynamicResource OutlineVariant}" />


                        <!--  LEFT COLUMN  -->

                        <!--  CREATED  -->
                        <Label
                            Grid.Row="1"
                            Grid.Column="0"
                            Content="Created:"
                            Style="{StaticResource TaskPropertyLabelLeftStyle}" />

                        <!--  MODIFIED  -->
                        <Label
                            Grid.Row="2"
                            Grid.Column="0"
                            Content="Modified:"
                            Style="{StaticResource TaskPropertyLabelLeftStyle}" />

                        <!--  EDITED  -->
                        <Label
                            Grid.Row="3"
                            Grid.Column="0"
                            Content="Edited:"
                            Style="{StaticResource TaskPropertyLabelLeftStyle}" />

                        <!--  RIGHT COLUMN  -->

                        <!--  CREATION DATE  -->
                        <Label
                            Grid.Row="1"
                            Grid.Column="1"
                            Style="{StaticResource TaskPropertyLabelRightStyle}">
                            <Label.Content>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <valueConverters1:CurrentDateTimeFormatMultiConverter />
                                    </MultiBinding.Converter>
                                    <Binding Path="CreationDate" />
                                    <Binding
                                        Path="AppSettings.DateTimeSettings.TaskCreationDateFormat"
                                        Source="{StaticResource AppSettings}" />
                                </MultiBinding>
                            </Label.Content>
                        </Label>

                        <!--  MODIFICATION DATE  -->
                        <Label
                            Grid.Row="2"
                            Grid.Column="1"
                            Style="{StaticResource TaskPropertyLabelRightStyle}">
                            <Label.Content>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <valueConverters1:CurrentDateTimeFormatMultiConverter />
                                    </MultiBinding.Converter>
                                    <Binding Path="ModificationDate" />
                                    <Binding
                                        Path="AppSettings.DateTimeSettings.TaskCreationDateFormat"
                                        Source="{StaticResource AppSettings}" />
                                </MultiBinding>
                            </Label.Content>
                        </Label>

                        <!--  EDITED X TIMES  -->
                        <StackPanel
                            Grid.Row="3"
                            Grid.Column="1"
                            Orientation="Horizontal">

                            <Label
                                Margin="8 0 0 0"
                                Padding="5 5 0 0"
                                Content="{Binding VersionCount}"
                                Style="{StaticResource TaskPropertyLabelRightStyle}" />
                            <Label
                                Margin="0"
                                Content=" times"
                                Style="{StaticResource TaskPropertyLabelRightStyle}" />

                        </StackPanel>

                    </Grid>
                </Grid>

            </Grid>

        </Border>

    </Grid>
</UserControl>
