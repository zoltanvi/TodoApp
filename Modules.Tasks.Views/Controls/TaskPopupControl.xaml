<UserControl
    x:Class="Modules.Tasks.Views.Controls.TaskPopupControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Modules.Common.Views.Controls;assembly=Modules.Common.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:taskItemView="clr-namespace:Modules.Tasks.Views.Controls.TaskItemView"
    x:Name="Root"
    d:DataContext="{d:DesignInstance taskItemView:TaskItemViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid Visibility="{Binding Content.IsDisplayMode, Converter={StaticResource BoolToVisibilityConverter}}">
        <Border
            Height="{Binding UIScaler.TaskPopupHeight, Source={StaticResource UIScaler}}"
            Margin="-5 -20 5 20"
            Padding="2 1"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Background="{DynamicResource Surface1}"
            BorderBrush="{DynamicResource OutlineVariant}"
            BorderThickness="1"
            CornerRadius="6"
            Visibility="{Binding AppSettings.TaskQuickActionSettings.AnyEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}">

            <Border.Resources>
                <DataTemplate x:Key="MarkerColorButtonTemplate">
                    <controls:SingletonColorPicker
                        ColorChangedNotification="{Binding ColorChangedNotification, Mode=OneWay}"
                        DataContext="{Binding DataContext, ElementName=Root}"
                        IsEnabled="{Binding IsQuickActionsEnabled}"
                        SelectedColorString="{Binding MarkerColor, Mode=TwoWay}"
                        Style="{StaticResource MinimalColorPickerComboboxStyle}"
                        ToolTip="Marker color" />
                </DataTemplate>

                <DataTemplate x:Key="BackgroundColorButtonTemplate">
                    <controls:SingletonColorPicker
                        ColorChangedNotification="{Binding ColorChangedNotification, Mode=OneWay}"
                        DataContext="{Binding ElementName=Root, Path=DataContext}"
                        IsEnabled="{Binding IsQuickActionsEnabled}"
                        SelectedColorString="{Binding BackgroundColor, Mode=TwoWay}"
                        Style="{StaticResource MinimalColorPickerComboboxStyle}"
                        ToolTip="Background color" />
                </DataTemplate>

                <DataTemplate x:Key="BorderColorButtonTemplate">
                    <controls:SingletonColorPicker
                        ColorChangedNotification="{Binding ColorChangedNotification, Mode=OneWay}"
                        DataContext="{Binding ElementName=Root, Path=DataContext}"
                        IsEnabled="{Binding IsQuickActionsEnabled}"
                        SelectedColorString="{Binding BorderColor, Mode=TwoWay}"
                        Style="{StaticResource MinimalColorPickerComboboxStyle}"
                        ToolTip="Border color" />
                </DataTemplate>

                <DataTemplate x:Key="TagSelectorButtonTemplate">
                    <Button
                        Command="{Binding Cmd.ShowTagSelectorCommand}"
                        Content="{StaticResource IconTag}"
                        DataContext="{Binding ElementName=Root, Path=DataContext}"
                        Style="{StaticResource ButtonQuickActionStyle}"
                        ToolTip="Select tags" />
                </DataTemplate>

                <DataTemplate x:Key="PinButtonTemplate">
                    <Button
                        Command="{Binding Cmd.PinItemCommand}"
                        Content="{StaticResource IconPin}"
                        DataContext="{Binding ElementName=Root, Path=DataContext}"
                        Style="{StaticResource ButtonQuickActionStyle}"
                        ToolTip="Pin task" />
                </DataTemplate>

                <DataTemplate x:Key="UnpinButtonTemplate">
                    <Button
                        Command="{Binding Cmd.UnpinItemCommand}"
                        Content="{StaticResource IconUnpin}"
                        DataContext="{Binding ElementName=Root, Path=DataContext}"
                        Style="{StaticResource ButtonQuickActionStyle}"
                        ToolTip="Unpin task" />
                </DataTemplate>

                <DataTemplate x:Key="SwitchFormatButtonTemplate">
                    <Button
                        Command="{Binding Cmd.SwitchFormattedPlainTextModeCommand}"
                        Content="{StaticResource IconSwitch}"
                        DataContext="{Binding ElementName=Root, Path=DataContext}"
                        Style="{StaticResource ButtonQuickActionStyle}"
                        ToolTip="Switch formatted / plain text mode" />
                </DataTemplate>

                <DataTemplate x:Key="ShowDetailsButtonTemplate">
                    <Button
                        Command="{Binding Cmd.ToggleDetailsCommand}"
                        Content="{StaticResource IconInfo}"
                        DataContext="{Binding ElementName=Root, Path=DataContext}"
                        Style="{StaticResource ButtonQuickActionStyle}"
                        ToolTip="Show details" />
                </DataTemplate>

                <DataTemplate x:Key="HideDetailsButtonTemplate">
                    <Button
                        Command="{Binding Cmd.ToggleDetailsCommand}"
                        Content="{StaticResource IconHideInfo}"
                        DataContext="{Binding ElementName=Root, Path=DataContext}"
                        Style="{StaticResource ButtonQuickActionStyle}"
                        ToolTip="Hide details" />
                </DataTemplate>

                <DataTemplate x:Key="TrashButtonTemplate">
                    <Button
                        Command="{Binding Cmd.DeleteItemCommand}"
                        Content="{StaticResource IconTrash}"
                        Cursor="Hand"
                        DataContext="{Binding ElementName=Root, Path=DataContext}"
                        Style="{StaticResource ButtonQuickActionRedStyle}"
                        ToolTip="Trash task" />
                </DataTemplate>
            </Border.Resources>

            <StackPanel Orientation="Horizontal">
                <!--  Calendar empty button  -->
                <!--<Grid Visibility="{Binding IsAnyReminderOn, Converter={StaticResource BoolToVisibilityNegatedConverter}}">
                    <Button
                        Command="{Binding Cmd.OpenReminderCommand}"
                        Content="{StaticResource IconCalendar}"
                        IsEnabled="{Binding IsQuickActionsEnabled}"
                        Style="{StaticResource ButtonQuickActionStyle}"
                        ToolTip="Set Reminder"
                        Visibility="{Binding AppSettings.TaskQuickActionSettings.ReminderEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />
                </Grid>-->

                <!--  Calendar active button  -->
                <!--<Grid Visibility="{Binding IsAnyReminderOn, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button
                        Command="{Binding Cmd.OpenReminderCommand}"
                        Content="{StaticResource IconDateTime}"
                        IsEnabled="{Binding IsQuickActionsEnabled}"
                        Style="{StaticResource ButtonQuickActionStyle}"
                        Visibility="{Binding AppSettings.TaskQuickActionSettings.ReminderEnabled, Source={StaticResource AppSettings}, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Button.ToolTip>
                            <MultiBinding>
                                <MultiBinding.Converter>
                                    <valueConverters:CurrentDateTimeFormatMultiConverter />
                                </MultiBinding.Converter>
                -->
                <!--<Binding Path="NextReminderDate" />-->
                <!--
                                <Binding
                                    Path="AppSettings.DateTimeSettings.ReminderDateFormat"
                                    Source="{StaticResource AppSettings}" />
                            </MultiBinding>
                        </Button.ToolTip>
                    </Button>
                </Grid>-->

                <!--  Marker color picker  -->
                <controls:ShowHideControl
                    CanShow="{Binding AppSettings.TaskQuickActionSettings.ColorEnabled, Source={StaticResource AppSettings}}"
                    DataContext="{Binding ElementName=Root, Path=DataContext}"
                    Id="Popup marker color button"
                    TemplateToShow="{StaticResource MarkerColorButtonTemplate}" />

                <!--  Background color picker  -->
                <controls:ShowHideControl
                    CanShow="{Binding AppSettings.TaskQuickActionSettings.BackgroundColorEnabled, Source={StaticResource AppSettings}}"
                    DataContext="{Binding ElementName=Root, Path=DataContext}"
                    Id="Popup background color button"
                    TemplateToShow="{StaticResource BackgroundColorButtonTemplate}" />

                <!--  Border color picker  -->
                <controls:ShowHideControl
                    CanShow="{Binding AppSettings.TaskQuickActionSettings.BorderColorEnabled, Source={StaticResource AppSettings}}"
                    DataContext="{Binding ElementName=Root, Path=DataContext}"
                    Id="Popup border color button"
                    TemplateToShow="{StaticResource BorderColorButtonTemplate}" />

                <!--  TAG SELECTOR BUTTON  -->
                <controls:ShowHideControl
                    CanShow="{Binding AppSettings.TaskQuickActionSettings.TagEnabled, Source={StaticResource AppSettings}}"
                    DataContext="{Binding ElementName=Root, Path=DataContext}"
                    Id="Popup tag selector button"
                    TemplateToShow="{StaticResource TagSelectorButtonTemplate}" />

                <!--  Pin button  -->
                <controls:ShowHideControl
                    CanShow="{Binding AppSettings.TaskQuickActionSettings.PinEnabled, Source={StaticResource AppSettings}}"
                    DataContext="{Binding ElementName=Root, Path=DataContext}"
                    Id="Popup pin button"
                    TemplateToShow="{StaticResource PinButtonTemplate}"
                    Visibility="{Binding Pinned, Converter={StaticResource BoolToVisibilityNegatedConverter}}" />

                <!--  Unpin button  -->
                <controls:ShowHideControl
                    CanShow="{Binding AppSettings.TaskQuickActionSettings.PinEnabled, Source={StaticResource AppSettings}}"
                    DataContext="{Binding ElementName=Root, Path=DataContext}"
                    Id="Popup pin button"
                    TemplateToShow="{StaticResource UnpinButtonTemplate}"
                    Visibility="{Binding Pinned, Converter={StaticResource BoolToVisibilityConverter}}" />

                <!--  Switch formatted / plain text mode  -->
                <controls:ShowHideControl
                    CanShow="{Binding AppSettings.TaskQuickActionSettings.SwitchFormattedPlainTextModeEnabled, Source={StaticResource AppSettings}}"
                    DataContext="{Binding ElementName=Root, Path=DataContext}"
                    Id="Popup switch format button"
                    TemplateToShow="{StaticResource SwitchFormatButtonTemplate}" />

                <!--  Show details  -->
                <controls:ShowHideControl
                    CanShow="{Binding AppSettings.TaskQuickActionSettings.DetailsEnabled, Source={StaticResource AppSettings}}"
                    DataContext="{Binding ElementName=Root, Path=DataContext}"
                    Id="Popup show details button"
                    TemplateToShow="{StaticResource ShowDetailsButtonTemplate}"
                    Visibility="{Binding DetailsVisible, Converter={StaticResource BoolToVisibilityNegatedConverter}}" />

                <!--  Hide details  -->
                <controls:ShowHideControl
                    CanShow="{Binding AppSettings.TaskQuickActionSettings.DetailsEnabled, Source={StaticResource AppSettings}}"
                    DataContext="{Binding ElementName=Root, Path=DataContext}"
                    Id="Popup hide details button"
                    TemplateToShow="{StaticResource HideDetailsButtonTemplate}"
                    Visibility="{Binding DetailsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />

                <!--  Trash button  -->
                <controls:ShowHideControl
                    CanShow="{Binding AppSettings.TaskQuickActionSettings.TrashEnabled, Source={StaticResource AppSettings}}"
                    DataContext="{Binding ElementName=Root, Path=DataContext}"
                    Id="Popup trash button"
                    TemplateToShow="{StaticResource TrashButtonTemplate}" />
            </StackPanel>

        </Border>
    </Grid>
</UserControl>
