<Window
    x:Class="TodoApp.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:attached="clr-namespace:Modules.Common.Views.AttachedProperties;assembly=Modules.Common.Views"
    xmlns:todoApp="clr-namespace:TodoApp"
    Title="TodoApp"
    Width="380"
    Height="500"
    MinWidth="{Binding WindowMinimumWidth}"
    MinHeight="{Binding WindowMinimumHeight}"
    d:DataContext="{d:DesignInstance Type=todoApp:MainWindowViewModel}"
    AllowsTransparency="True"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <!--  WindowStartupLocation and WindowStyle="None" are important  -->

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="PreviewMouseWheel">
            <b:CallMethodAction MethodName="OnPreviewMouseWheel" TargetObject="{Binding}" />
        </b:EventTrigger>
        <b:EventTrigger EventName="KeyDown">
            <b:CallMethodAction MethodName="OnKeyDown" TargetObject="{Binding}" />
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="{Binding AppSettings.AppWindowSettings.TitleBarHeight, Source={StaticResource AppSettings}, Converter={StaticResource TitleBarHeightConverter}}"
            CornerRadius="0"
            GlassFrameThickness="0"
            ResizeBorderThickness="{Binding ResizeBorderThickness}" />
    </WindowChrome.WindowChrome>

    <Grid>
        <Grid x:Name="LayoutReferenceGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="ReferenceBorder"
                Grid.Column="0"
                Background="#00000000" />
        </Grid>
        <Grid x:Name="Grid">

            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="{Binding ElementName=ReferenceBorder, Path=ActualWidth}" />
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">

                <Border Background="Yellow">
                    <TextBlock Text="Hello" />
                </Border>
                <!--  Side menu page  -->
                <!--<local:SideMenuControl x:Name="SideMenu" />-->

            </Grid>

            <!--  Current page  -->
            <Frame
                x:Name="MainFrame"
                Grid.Column="2"
                Margin="-6 0 0 0"
                attached:NoFrameHistory.Value="True"
                AutomationProperties.AutomationId="MainPageFrame" />

            <!--  RESIZER HANDLE  -->

            <GridSplitter
                x:Name="Resizer"
                Grid.Column="1"
                Width="6"
                HorizontalAlignment="Center"
                VerticalAlignment="Stretch"
                Background="{DynamicResource Primary}"
                Cursor="SizeWE"
                Opacity="0">
                <GridSplitter.Style>
                    <Style TargetType="GridSplitter">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                To="0.3"
                                                Duration="0:0:0.5" />
                                            <DoubleAnimation
                                                BeginTime="0:0:0.5"
                                                Storyboard.TargetProperty="Opacity"
                                                From="0.3"
                                                To="0.7"
                                                Duration="0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                        </Style.Triggers>
                    </Style>
                </GridSplitter.Style>

            </GridSplitter>

            <!--  Overlay background  -->
            <!--<local:OverlayBackgroundControl Grid.ColumnSpan="3" x:Name="OverlayBackground"/>-->

        </Grid>

        <Grid>
            <!--  Message line  -->

            <!--<Grid
                Grid.ColumnSpan="3"
                VerticalAlignment="Top"
                animation:AnimateSlideInFromTopProperty.Value="{Binding MessageLineVisible}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border
                    Grid.Column="1"
                    MaxHeight="100"
                    Margin="10"
                    Padding="10 0"
                    Background="{Binding MessageService.MessageType, Source={x:Static local:VML.Instance}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource messageBackgroundConverter}}"
                    BorderBrush="{Binding MessageService.MessageType, Source={x:Static local:VML.Instance}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource messageBorderConverter}}"
                    BorderThickness="{Binding UIScaler.ScaleValue, Source={StaticResource UIScaler}}"
                    CornerRadius="4"
                    SnapsToDevicePixels="True">
            -->
            <!--<Border.Effect>
                    <DropShadowEffect
                        ShadowDepth="0"
                        BlurRadius="12"
                        Color="Black"
                        Opacity="0.5" />
                </Border.Effect>-->
            <!--

                    <Grid Margin="10 4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            FontFamily="{DynamicResource UIFont}"
                            FontSize="{Binding UIScaler.FontSize.Regular, Source={StaticResource UIScaler}}"
                            FontWeight="Bold"
                            Foreground="{Binding MessageService.MessageType, Source={x:Static local:VML.Instance}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource messageForegroundConverter}}"
                            Text="{Binding MessageService.Message, Source={x:Static local:VML.Instance}}"
                            TextWrapping="Wrap" />

                        <Button
                            Grid.Column="1"
                            Margin="30 2 0 2"
                            Command="{Binding UndoCommand}"
                            Content="Undo"
                            DockPanel.Dock="Right"
                            Style="{DynamicResource ReminderBottomButtonStyle}"
                            Visibility="{Binding MessageService.UndoButtonVisible, Source={x:Static local:VML.Instance}, Converter={StaticResource boolToVisibilityConverter}}" />
                    </Grid>

                </Border>
            </Grid>-->
        </Grid>

    </Grid>


</Window>
