<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style
        x:Key="ButtonBaseStyle"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource OnBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontStretch="{TemplateBinding FontStretch}"
                            FontStyle="{TemplateBinding FontStyle}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Content}"
                            TextOptions.TextFormattingMode="Display"
                            TextOptions.TextHintingMode="Fixed"
                            TextOptions.TextRenderingMode="ClearType" />
                        <!--<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ButtonHoverStyle"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource OnSecondaryContainer}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Surface3}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style
        x:Key="ButtonIconStyle"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource IconFont}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Medium, Source={StaticResource UIScaler}}" />
    </Style>

    <Style
        x:Key="LabelIconStyle"
        TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource IconFont}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Medium, Source={StaticResource UIScaler}}" />
        <Setter Property="Foreground" Value="{DynamicResource OnBackground}" />
    </Style>


    <Style
        x:Key="ButtonIconHoverStyle"
        BasedOn="{StaticResource ButtonIconStyle}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryContainer}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style
        x:Key="BaseLabelClearTypeStyle"
        TargetType="Label">
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="Foreground" Value="{DynamicResource OnBackground}" />
    </Style>

    <Style
        x:Key="BaseTextBlockClearTypeStyle"
        TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="Foreground" Value="{DynamicResource OnBackground}" />
    </Style>


    <Style
        x:Key="BaseInputTextBoxStyle"
        TargetType="TextBox">
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Regular, Source={StaticResource UIScaler}}" />
        <Setter Property="Foreground" Value="{DynamicResource OnBackground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <!--<Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>-->
        <Setter Property="CaretBrush" Value="{DynamicResource Primary}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden">
                                <!--<ScrollViewer.ContentTemplate>
                                <DataTemplate>
                                    <Grid Background="{Binding Background, ElementName=PART_ContentHost}" RenderOptions.ClearTypeHint="Enabled">
                                        <ContentPresenter Content="{Binding Path=Content, ElementName=PART_ContentHost}"></ContentPresenter>
                                    </Grid>
                                </DataTemplate>
                            </ScrollViewer.ContentTemplate>-->
                            </ScrollViewer>
                        </Border>

                        <TextBlock
                            x:Name="placeholder"
                            Margin="2 0 0 0"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource Outline}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}">
                            <TextBlock.Style>
                                <Style
                                    BasedOn="{StaticResource BaseTextBlockClearTypeStyle}"
                                    TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <!--<ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" TargetName="border" Value="0.56" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5" />
                    </Trigger>
                </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>